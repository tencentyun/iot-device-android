apply plugin: 'com.android.library'
apply plugin: 'maven-publish'

android {
    compileSdkVersion 29
    buildToolsVersion "26.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 2
        versionName "1.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"

    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            java {
                srcDirs - ["src/main/java", "src/main/aidl"]
            }
            jni {
                srcDir "src/main/jni"
            }
        }
    }
    lintOptions {
        abortOnError false
    }
}

task androidJavadocs(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    android.libraryVariants.all { variant ->
        if (variant.name == 'release') {
            owner.classpath += variant.javaCompile.classpath
        }
    }
    exclude '**/R.html', '**/R.*.html', '**/index.html'
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

def libVersion = '1.0.0-SNAPSHOT'
publishing {
    publications {
        aar(MavenPublication) {
            groupId 'com.tencent.iot.hub'
            artifactId 'hub-device-android-core'
            version libVersion
            artifact(androidSourcesJar)
            artifact(androidJavadocsJar)
            artifact file('build/outputs/aar/iot_core-debug.aar')
        }
    }
    repositories {
        maven {
            def releasesRepoUrl = "https://oss.sonatype.org/service/local/staging/deploy/maven2"
            def snapshotsRepoUrl = "https://oss.sonatype.org/content/repositories/snapshots"
            url = libVersion.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            credentials {
                username = System.getenv("IOT_SONATYPE_USERNAME")
                password = System.getenv("IOT_SONATYPE_PASSWORD")
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    //noinspection GradleCompatible
    implementation 'com.android.support:appcompat-v7:26.1.0'
    testImplementation 'junit:junit:4.13'

    implementation "org.eclipse.paho:org.eclipse.paho.client.mqttv3:${rootProject.ext.mqttJavaSdkVer}"
    implementation "com.squareup.okhttp3:okhttp:3.12.2"
    implementation 'org.bouncycastle:bcprov-jdk15on:1.65'
    implementation 'org.bouncycastle:bcpkix-jdk15on:1.65'
    implementation project(path: ':hub-device-java')
}

//apply from: 'bintray.gradle'
